[build-system]
requires = ["setuptools~=62.3", "wheel~=0.37.1"]
build-backend = "setuptools.build_meta"

[project]
name = "python-matter-server"
version = "2.0.1"
license     = {text = "Apache-2.0"}
description = "Python Matter WebSocket Server"
readme = "README.md"
authors = [
    {name = "The Home Assistant Authors", email = "hello@home-assistant.io"}
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Environment :: Console",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Topic :: Home Automation",
]
dependencies = [
  "aiohttp",
  "aiorun",
  "coloredlogs",
  "dacite",
  "orjson",
  "home-assistant-chip-clusters==2023.1.0"
]

[project.optional-dependencies]
server = [
  "home-assistant-chip-core==2023.1.0"
]
test = [
  "black==22.10.0",
  "flake8==6.0.0",
  "flake8-docstrings==1.6.0",
  "isort==5.10.1",
  "mypy==0.991",
  "pylint==2.15.8",
  "pytest==7.2.0",
  "pytest-aiohttp==1.0.4",
  "pytest-cov==4.0.0",
]

[project.scripts]
matter-server = "matter_server.server.__main__:main"

[tool.mypy]
check_untyped_defs = true
#disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_defs = true
mypy_path = "matter_server/"
no_implicit_optional = true
show_error_codes = true
warn_incomplete_stub = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
  "aiorun",
  "chip.*",
  "coloredlogs",
]

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.setuptools]
platforms = ["any"]
zip-safe  = false
include-package-data = true

[tool.setuptools.package-data]
matter_server = ["py.typed"]

[tool.setuptools.packages.find]
include = ["matter_server*"]


[tool.pylint.BASIC]
class-const-naming-style = "any"
good-names = [
    "_",
    "ev",
    "ex",
    "fp",
    "i",
    "id",
    "j",
    "k",
    "Run",
    "ip",
]

[tool.pylint."MESSAGES CONTROL"]
# fixme - we are still a work in progress
# too-many-instance-attributes - just because it is unavoidable
# too-few-public-methods - just because it is unavoidable
# too-many-arguments - just because it is unavoidable
disable = [
    "fixme",
    "too-many-instance-attributes",
    "too-few-public-methods",
    "too-many-arguments"
]

[tool.isort]
# https://github.com/PyCQA/isort/wiki/isort-Settings
profile = "black"
# will group `import x` and `from x import` of the same module.
force_sort_within_sections = true
src_paths = [
  "matter_server/client",
  "matter_server/common",
  "matter_server/server",
]
known_first_party = [
    "matter_server",
    "tests",
]
forced_separate = [
    "tests",
]
combine_as_imports = true
