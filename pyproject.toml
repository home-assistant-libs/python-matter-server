[build-system]
requires = ["setuptools~=62.3", "wheel~=0.37.1"]
build-backend = "setuptools.build_meta"

[project]
name = "python-matter-server"
version = "3.1.0"
license     = {text = "Apache-2.0"}
description = "Python Matter WebSocket Server"
readme = "README.md"
requires-python = ">=3.10"
authors = [
    {name = "The Home Assistant Authors", email = "hello@home-assistant.io"}
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Environment :: Console",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Topic :: Home Automation",
]
dependencies = [
  "aiohttp",
  "aiorun",
  "coloredlogs",
  "dacite",
  "orjson",
  "home-assistant-chip-clusters==2023.2.2"
]

[project.optional-dependencies]
server = [
  "home-assistant-chip-core==2023.2.2",
  "cryptography==39.0.1"
]
test = [
  "black==23.1.0",
  "codespell==2.2.4",
  "mypy==1.1.1",
  "ruff==0.0.257",
  "pytest==7.2.2",
  "pytest-asyncio==0.21.0",
  "pytest-aiohttp==1.0.4",
  "pytest-cov==4.0.0",
  "pre-commit==3.2.0"
]

[project.scripts]
matter-server = "matter_server.server.__main__:main"

[tool.black]
target-version = ['py311']
line-length = 100

[tool.codespell]


[tool.mypy]
python_version = "3.10"
check_untyped_defs = true
#disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_defs = true
mypy_path = "matter_server/"
no_implicit_optional = true
show_error_codes = true
warn_incomplete_stub = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
  "aiorun",
  "chip.*",
  "coloredlogs",
  "cryptography.*"
]

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.setuptools]
platforms = ["any"]
zip-safe  = false
include-package-data = true

[tool.setuptools.package-data]
matter_server = ["py.typed"]

[tool.setuptools.packages.find]
include = ["matter_server*"]


[tool.pylint.BASIC]
class-const-naming-style = "any"
good-names = [
    "_",
    "ev",
    "ex",
    "fp",
    "i",
    "id",
    "j",
    "k",
    "Run",
    "ip",
]

[tool.pylint."MESSAGES CONTROL"]
# fixme - we are still a work in progress
# too-many-instance-attributes - just because it is unavoidable
# too-few-public-methods - just because it is unavoidable
# too-many-arguments - just because it is unavoidable
disable = [
    "fixme",
    "too-many-instance-attributes",
    "too-few-public-methods",
    "too-many-arguments"
]

[tool.ruff]
fix = true
show-fixes = true

# enable later: "C90", "PTH", "TCH", "RET", "ANN"
select = ["E", "F", "W", "I", "N", "D", "UP", "PL", "Q", "SIM", "TID", "ARG"]
ignore = ["PLR2004", "N818"]
unfixable = ["F841"]
line-length = 100
target-version = "py311"

[tool.ruff.flake8-annotations]
allow-star-arg-any = true
suppress-dummy-args = true

[tool.ruff.flake8-builtins]
builtins-ignorelist = ["id"]

[tool.ruff.pydocstyle]
# Use Google-style docstrings.
convention = "pep257"

[tool.ruff.pylint]
max-branches=25
max-returns=15
max-args=10
max-statements=50
