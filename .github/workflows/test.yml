# This workflow will install Python dependencies, run tests and lint
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    continue-on-error: true

    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v3.2.0
      - name: Set up Python
        uses: actions/setup-python@v4.3.1
        with:
          python-version: "3.9"
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgirepository1.0-dev
          python -m pip install --upgrade pip
          pip install -e .[server] -r requirements-test.txt
      - name: Flake8
        run: flake8 scripts/ matter_server/
      - name: Black
        run: black --check scripts/ matter_server/
      - name: isort
        run: isort --check scripts/ matter_server/
      - name: pylint
        run: pylint matter_server/

  test:
    if: ${{ false }} # disable until tests are fixed
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.9"
          - "3.10"

    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v3.2.0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4.3.1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgirepository1.0-dev
          python -m pip install --upgrade pip
          pip install -e .[server] -r requirements-test.txt
      - name: test show stored node script
        run: python3 -m scripts.show_stored_node tests/fixtures/nodes/lighting-example-app.json
      - name: test dump fixer script
        run: python3 -m scripts.dump_fixer tests/fixtures/nodes/lighting-example-app.json
      - name: Pytest
        run: pytest tests
